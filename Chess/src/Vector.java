package src;

//vector represents a vector of where a pieces can move, generated by the piece and later limited based on board state
public class Vector {
    public final Direction dir;
    public final byte x, y;
    public byte limit;

    public Vector(Direction dir, byte x, byte y, byte limit) {
        this.dir = dir;
        this.x = x;
        this.y = y;
        this.limit = limit;
    }

    public Vector(byte x, byte y, byte moveX, byte moveY) {
        this.x = x;
        this.y = y;
        if (moveX == x) {
            if (moveY > y) dir = Direction.UP;
            else dir = Direction.DOWN;
            limit = (byte) Math.abs(y - moveY);
        } else if (moveY == y) {
            if (moveX > x) dir = Direction.RIGHT;
            else dir = Direction.LEFT;
            limit = (byte) Math.abs(x - moveX);
        } else if (Math.abs(moveX - x) == Math.abs(moveY - y)) {
            if (moveX > x) {
                if (moveY > y) dir = Direction.UP_RIGHT;
                else dir = Direction.DOWN_RIGHT;
            } else {
                if (moveY > y) dir = Direction.UP_LEFT;
                else dir = Direction.DOWN_LEFT;
            }
            limit = (byte) Math.abs(moveX - x);
        } else if (moveY - y == 2) {
            if (moveX - x == 1) dir = Direction.KNIGHT_UP_RIGHT;
            else if (x - moveX == 1) dir = Direction.KNIGHT_UP_LEFT;
            else dir = Direction.INVALID;
        } else if (y - moveY == 2) {
            if (moveX - x == 1) dir = Direction.KNIGHT_DOWN_RIGHT;
            else if (x - moveX == 1) dir = Direction.KNIGHT_DOWN_LEFT;
            else dir = Direction.INVALID;
        } else if (moveX - x == 2) {
            if (moveY - y == 1) dir = Direction.KNIGHT_RIGHT_UP;
            else if (y - moveY == 1) dir = Direction.KNIGHT_RIGHT_DOWN;
            else dir = Direction.INVALID;
        } else if (x - moveX == 2) {
            if (moveY - y == 1) dir = Direction.KNIGHT_LEFT_UP;
            else if (y - moveY == 1) dir = Direction.KNIGHT_LEFT_DOWN;
            else dir = Direction.INVALID;
        } else dir = Direction.INVALID;
    }

    public void limit(byte limit) {
        this.limit = limit;
    }

    public String toString() {
        return "Starting at "+x+", "+y+" and going "+dir+" for "+limit;
    }
}
